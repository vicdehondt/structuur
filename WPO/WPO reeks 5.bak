(define (add-to-end e l)
  (if (null? l)
      (list e)
      (cons (car l) (add-to-end e (cdr l)))))

(define (append x y)
  (define (iter y res)
    (if (null? y)
        (reverse res)
        (iter (cdr y) (cons (car y) res))))
  (iter y (reverse x)))
